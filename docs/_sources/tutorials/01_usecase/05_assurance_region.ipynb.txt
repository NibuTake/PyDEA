{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\n# Assurance region\n\nPreparing...\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\\begin{align}\\alpha_i \\leq \\frac{\\nu_i}{\\nu_{i_o}} \\beta_i, i= 1, \\dots, m\\end{align}\n\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Import modules and prepare data.\n\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nfrom Pyfrontier.frontier_model import MultipleDEA\n\ndf = pd.DataFrame({\"price\": [1, 2, 4, 6], \"rent\": [5, 2, 1, 1], \"output\": [3, 3, 3, 3]})\n\ndf"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\u3053\u308c\u306b\u3088\u3063\u3066\u4e57\u6570\u540c\u58eb\u306e\u91cd\u8981\u6027\u306a\u3069\u3092\u52a0\u5473\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\\begin{align}1 \\leq \\frac{x_{price}}{x_{rent}} \\leq 2\\end{align}\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "dea = MultipleDEA(\"CRS\", \"in\")\ndea.fit(df[[\"price\", \"rent\"]].to_numpy(), df[[\"output\"]].to_numpy())\n\nprint(\"ordinary dea: \", [r.score for r in dea.result])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "dea_ar = MultipleDEA(\"CRS\", \"in\")\ndea_ar.add_assurance_region(\"in\", index_a=0, index_b=1, coefficient=2, operator=\"<=\")\ndea_ar.add_assurance_region(\"in\", index_a=0, index_b=1, coefficient=1, operator=\">=\")\ndea_ar.fit(df[[\"price\", \"rent\"]].to_numpy(), df[[\"output\"]].to_numpy())\n\nprint(\"assurance region: \", [r.score for r in dea_ar.result])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "def restrict_f_1(x: np.ndarray):\n    return -x + 4\n\n\ndef restrict_f_2(x: np.ndarray):\n    return -2 * x + 6\n\n\nx = np.array([0, 6])\nx1 = np.array([2, 6])\nx2 = np.array([0, 2])\n\nplt.figure()\nplt.plot(\n    [r.dmu.input[0] for r in dea.result], [r.dmu.input[1] for r in dea.result], \"o-\"\n)\nplt.plot(x, restrict_f_1(x), linestyle=\"--\", label=\"rent = price\")\nplt.plot(x, restrict_f_2(x), linestyle=\"--\", label=\"price = 2*rent\")\nplt.fill_between(x1, restrict_f_1(x1), [6, 6], alpha=0.2, color=\"C0\")\nplt.fill_between(x2, restrict_f_2(x2), [6, 6], alpha=0.2, color=\"C0\")\nplt.plot(x1, restrict_f_1(x1), color=\"red\")\nplt.plot(x2, restrict_f_2(x2), color=\"red\", label=\"frontier\")\nplt.xlabel(\"price\")\nplt.ylabel(\"rent\")\nplt.ylim(0, 6)\nplt.legend()\nplt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\u901a\u5e38\u306eDEA\u3067\u52b9\u7387\u7684\u3060\u3063\u305fDMU\u306f\u3001\u30d5\u30ed\u30f3\u30c6\u30a3\u30a2\u306e\u50be\u304d\u306b\u5236\u7d04\u304c\u8ab2\u3055\u308c\u308b\u3053\u3068\u3067\u4e00\u3064\u306e\u307f\u3068\u306a\u3063\u305f\u3002\n\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## References\n.. seealso::\n\n   Author\n      Russell G. Thompson and Larry N. Langemeier and Chih-Tah Lee and Euntaik Lee and Robert M. Thrall. \n   Title\n      *The role of multiplier bounds in efficiency analysis with application to Kansas farming*, \n    Journal of Econometrics, \n    1990. \n    :numref:`https://doi.org/10.1016/0304-4076(90)90049-Y`. \n\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.9"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}