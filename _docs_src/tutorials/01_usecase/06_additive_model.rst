
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/01_usecase/06_additive_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_01_usecase_06_additive_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_01_usecase_06_additive_model.py:


Additive model
=========================

Preparing...

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Import modules and prepare data.
------------------------
Average of rental properties in a given district.

.. GENERATED FROM PYTHON SOURCE LINES 12-23

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    from Pyfrontier.frontier_model import AdditiveDEA

    df = pd.DataFrame(
        {"input_1": [1, 1.5, 3, 3], "input_2": [3, 1.5, 1, 3], "output": [16, 16, 16, 16]}
    )
    df





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>input_1</th>
          <th>input_2</th>
          <th>output</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1.0</td>
          <td>3.0</td>
          <td>16</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1.5</td>
          <td>1.5</td>
          <td>16</td>
        </tr>
        <tr>
          <th>2</th>
          <td>3.0</td>
          <td>1.0</td>
          <td>16</td>
        </tr>
        <tr>
          <th>3</th>
          <td>3.0</td>
          <td>3.0</td>
          <td>16</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 24-28

No weight.
------------------------------

The necessity inputs are inputs and outputs. The result has below belongings.

.. GENERATED FROM PYTHON SOURCE LINES 28-35

.. code-block:: Python

    dea = AdditiveDEA("CRS")
    dea.fit(
        df[["input_1", "input_2"]].to_numpy(),
        df[["output"]].to_numpy(),
    )

    dea.result[0]




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    AdditiveResult(score=nan, id=0, dmu=DMU(input=array([1., 3.]), output=array([16]), id=0), x_slack=[0.0, 0.0], y_slack=[0.0])



.. GENERATED FROM PYTHON SOURCE LINES 36-37

In the built documentation.

.. GENERATED FROM PYTHON SOURCE LINES 37-59

.. code-block:: Python

    eff_dmu = [r.dmu for r in dea.result if r.is_efficient]
    ineff_dmu = [r.dmu for r in dea.result if r.is_efficient != 1]

    plt.figure()
    plt.plot(
        [d.input[0] for d in eff_dmu],
        [d.input[1] for d in eff_dmu],
        "-o",
        label="efficient dmu",
    )
    plt.plot(
        [d.input[0] for d in ineff_dmu],
        [d.input[1] for d in ineff_dmu],
        "o",
        label="not-efficient dmu",
    )
    plt.annotate(
        "", xy=[1.5, 1.5], xytext=[3, 3], arrowprops=dict(arrowstyle="-|>", color="red")
    )
    plt.xlabel("input_1")
    plt.ylabel("input_2")




.. image-sg:: /tutorials/01_usecase/images/sphx_glr_06_additive_model_001.png
   :alt: 06 additive model
   :srcset: /tutorials/01_usecase/images/sphx_glr_06_additive_model_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(33.972222222222214, 0.5, 'input_2')



.. GENERATED FROM PYTHON SOURCE LINES 60-64

With weight.
------------------------------

The necessity inputs are inputs and outputs. The result has below belongings.

.. GENERATED FROM PYTHON SOURCE LINES 64-74

.. code-block:: Python


    dea_with_weight = AdditiveDEA("CRS")
    dea_with_weight.fit(
        df[["input_1", "input_2"]].to_numpy(),
        df[["output"]].to_numpy(),
        x_weight=np.array([0.8, 0.2]),
        y_weight=np.array([0]),
    )

    dea_with_weight.result[-1]




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    AdditiveResult(score=nan, id=3, dmu=DMU(input=array([3., 3.]), output=array([16]), id=3), x_slack=[2.0, 0.0], y_slack=[0.0])



.. GENERATED FROM PYTHON SOURCE LINES 75-93

.. code-block:: Python

    plt.figure()
    plt.plot(
        [d.input[0] for d in eff_dmu],
        [d.input[1] for d in eff_dmu],
        "-o",
        label="efficient dmu",
    )
    plt.plot(
        [d.input[0] for d in ineff_dmu],
        [d.input[1] for d in ineff_dmu],
        "o",
        label="not-efficient dmu",
    )
    plt.annotate(
        "", xy=[1, 3], xytext=[3, 3], arrowprops=dict(arrowstyle="-|>", color="red")
    )
    plt.xlabel("input_1")
    plt.ylabel("input_2")



.. image-sg:: /tutorials/01_usecase/images/sphx_glr_06_additive_model_002.png
   :alt: 06 additive model
   :srcset: /tutorials/01_usecase/images/sphx_glr_06_additive_model_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(33.972222222222214, 0.5, 'input_2')



.. GENERATED FROM PYTHON SOURCE LINES 94-105

References
------------------------
.. seealso::

   Author
      A. Charnes and W.W. Cooper and L. Seiford and J. Stutz. 
   Title
      *A multiplicative model for efficiency analysis*, 
    Socio-Economic Planning Sciences, 
    1982. 
    :numref:`https://www.sciencedirect.com/science/article/pii/0038012182900295`. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.577 seconds)


.. _sphx_glr_download_tutorials_01_usecase_06_additive_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 06_additive_model.ipynb <06_additive_model.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 06_additive_model.py <06_additive_model.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
