
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/01_usecase/05_assurance_region.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_01_usecase_05_assurance_region.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_01_usecase_05_assurance_region.py:


Assurance region
=========================

Preparing...

.. GENERATED FROM PYTHON SOURCE LINES 10-12

.. math::
   \alpha_i \leq \frac{\nu_i}{\nu_{i_o}} \beta_i, i= 1, \dots, m

.. GENERATED FROM PYTHON SOURCE LINES 14-17

Import modules and prepare data.
------------------------


.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: Python

    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    from Pyfrontier.frontier_model import MultipleDEA

    df = pd.DataFrame({"price": [1, 2, 4, 6], "rent": [5, 2, 1, 1], "output": [3, 3, 3, 3]})

    df





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>price</th>
          <th>rent</th>
          <th>output</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1</td>
          <td>5</td>
          <td>3</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2</td>
          <td>2</td>
          <td>3</td>
        </tr>
        <tr>
          <th>2</th>
          <td>4</td>
          <td>1</td>
          <td>3</td>
        </tr>
        <tr>
          <th>3</th>
          <td>6</td>
          <td>1</td>
          <td>3</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 27-31

これによって乗数同士の重要性などを加味することができる。

.. math::
   1 \leq \frac{x_{price}}{x_{rent}} \leq 2

.. GENERATED FROM PYTHON SOURCE LINES 33-38

.. code-block:: Python

    dea = MultipleDEA("CRS", "in")
    dea.fit(df[["price", "rent"]].to_numpy(), df[["output"]].to_numpy())

    print("ordinary dea: ", [r.score for r in dea.result])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ordinary dea:  [1.0, 1.0, 1.0, 1.0]




.. GENERATED FROM PYTHON SOURCE LINES 39-46

.. code-block:: Python

    dea_ar = MultipleDEA("CRS", "in")
    dea_ar.add_assurance_region("in", index_a=0, index_b=1, coefficient=2, operator="<=")
    dea_ar.add_assurance_region("in", index_a=0, index_b=1, coefficient=1, operator=">=")
    dea_ar.fit(df[["price", "rent"]].to_numpy(), df[["output"]].to_numpy())

    print("assurance region: ", [r.score for r in dea_ar.result])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    assurance region:  [0.857143, 1.0, 0.8, 0.571429]




.. GENERATED FROM PYTHON SOURCE LINES 47-75

.. code-block:: Python

    def restrict_f_1(x: np.ndarray):
        return -x + 4


    def restrict_f_2(x: np.ndarray):
        return -2 * x + 6


    x = np.array([0, 6])
    x1 = np.array([2, 6])
    x2 = np.array([0, 2])

    plt.figure()
    plt.plot(
        [r.dmu.input[0] for r in dea.result], [r.dmu.input[1] for r in dea.result], "o-"
    )
    plt.plot(x, restrict_f_1(x), linestyle="--", label="rent = price")
    plt.plot(x, restrict_f_2(x), linestyle="--", label="price = 2*rent")
    plt.fill_between(x1, restrict_f_1(x1), [6, 6], alpha=0.2, color="C0")
    plt.fill_between(x2, restrict_f_2(x2), [6, 6], alpha=0.2, color="C0")
    plt.plot(x1, restrict_f_1(x1), color="red")
    plt.plot(x2, restrict_f_2(x2), color="red", label="frontier")
    plt.xlabel("price")
    plt.ylabel("rent")
    plt.ylim(0, 6)
    plt.legend()
    plt.show()




.. image-sg:: /tutorials/01_usecase/images/sphx_glr_05_assurance_region_001.png
   :alt: 05 assurance region
   :srcset: /tutorials/01_usecase/images/sphx_glr_05_assurance_region_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 76-77

通常のDEAで効率的だったDMUは、フロンティアの傾きに制約が課されることで一つのみとなった。

.. GENERATED FROM PYTHON SOURCE LINES 80-91

References
------------------------
.. seealso::

   Author
      Russell G. Thompson and Larry N. Langemeier and Chih-Tah Lee and Euntaik Lee and Robert M. Thrall. 
   Title
      *The role of multiplier bounds in efficiency analysis with application to Kansas farming*, 
    Journal of Econometrics, 
    1990. 
    :numref:`https://www.sciencedirect.com/science/article/pii/030440769090049Y`. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.349 seconds)


.. _sphx_glr_download_tutorials_01_usecase_05_assurance_region.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 05_assurance_region.ipynb <05_assurance_region.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 05_assurance_region.py <05_assurance_region.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
