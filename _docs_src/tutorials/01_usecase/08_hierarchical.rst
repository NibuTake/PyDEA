
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/01_usecase/08_hierarchical.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_01_usecase_08_hierarchical.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_01_usecase_08_hierarchical.py:


Context-dependent DEA
=========================

Preparing...

.. GENERATED FROM PYTHON SOURCE LINES 10-13

Import modules and prepare data.
------------------------


.. GENERATED FROM PYTHON SOURCE LINES 13-19

.. code-block:: Python


    import matplotlib.pyplot as plt
    import pandas as pd

    from Pyfrontier.frontier_model import EnvelopDEA, HierarchalDEA








.. GENERATED FROM PYTHON SOURCE LINES 20-33

.. code-block:: Python

    df = pd.DataFrame(
        {
            "input_1": [4, 2, 1, 1, 5, 2.5, 1.5, 5, 4, 2.5],
            "input_2": [1, 1.5, 3, 4, 2, 2.5, 5, 3, 3, 4.5],
            "output": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        }
    )

    h_dea = HierarchalDEA(EnvelopDEA("CRS", "in"))

    h_dea.fit(df[["input_1", "input_2"]].to_numpy(), df[["output"]].to_numpy())

    h_dea.result[0]




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [EnvelopResult(score=1.0, id=0, dmu=DMU(input=array([4., 1.]), output=array([3]), id=0), weights=[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], x_slack=[0.0, 0.0], y_slack=[0.0]), EnvelopResult(score=1.0, id=1, dmu=DMU(input=array([2. , 1.5]), output=array([3]), id=1), weights=[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], x_slack=[0.0, 0.0], y_slack=[0.0]), EnvelopResult(score=1.0, id=2, dmu=DMU(input=array([1., 3.]), output=array([3]), id=2), weights=[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], x_slack=[0.0, 0.0], y_slack=[0.0]), EnvelopResult(score=1.0, id=3, dmu=DMU(input=array([1., 4.]), output=array([3]), id=3), weights=[0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], x_slack=[0.0, 1.0], y_slack=[0.0])]



.. GENERATED FROM PYTHON SOURCE LINES 34-42

.. code-block:: Python

    plt.figure()
    for res in h_dea.result:
        plt.plot(
            [r.dmu.input[0] for r in res],
            [r.dmu.input[1] for r in res],
            "o-",
            color="C0",
        )



.. image-sg:: /tutorials/01_usecase/images/sphx_glr_08_hierarchical_001.png
   :alt: 08 hierarchical
   :srcset: /tutorials/01_usecase/images/sphx_glr_08_hierarchical_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 43-54

References
------------------------
.. seealso::

   Author
      Lawrence M. Seiford and Joe Zhu. 
   Title
      *Context-dependent data envelopment analysisâ€”Measuring attractiveness and progress*, 
    Omega-international Journal of Management Science, 
    2003. 
    :numref:`https://EconPapers.repec.org/RePEc:eee:jomega:v:31:y:2003:i:5:p:397-408`. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.911 seconds)


.. _sphx_glr_download_tutorials_01_usecase_08_hierarchical.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 08_hierarchical.ipynb <08_hierarchical.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 08_hierarchical.py <08_hierarchical.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
